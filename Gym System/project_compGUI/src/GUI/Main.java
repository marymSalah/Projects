/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import Logic.*;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.util.ArrayList;

/**
 *
 * @author noora
 */
public class Main extends javax.swing.JFrame {

    private ArrayList<Member> m1 = new ArrayList();
    private ArrayList<Employee> e1 = new ArrayList();
    private AdminstrativeSystem a1 = new AdminstrativeSystem();

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Bahrain Polytechnic Gym Adminstration System");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Gloucester MT Extra Condensed", 0, 48)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Bahrain Polytechnic ");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(-1, 80, 500, -1));

        jLabel3.setFont(new java.awt.Font("Gloucester MT Extra Condensed", 0, 48)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("GYM");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 130, 500, -1));

        jLabel4.setFont(new java.awt.Font("Georgia Pro Cond Semibold", 0, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("WELCOME");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 250, 190, -1));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/button.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 240, 190, 50));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/welcome.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String filePath = "serialize.dat";
        File file = new File(filePath);
        if (!file.exists()) {
            try {
                Scanner inFile = new Scanner(new File("startup.txt"));
                int numOfEmp = Integer.parseInt(inFile.nextLine());
                String emptype, fname, surname, address, phone;
                String memtype, dob, gender, position, department, degree, team;

                double salary;
                int numOfMem;
                for (int i = 0; i < numOfEmp; i++) {
                    emptype = inFile.nextLine();
                    if (emptype.equalsIgnoreCase("E")) {
                        fname = inFile.nextLine();
                        surname = inFile.nextLine();
                        address = inFile.nextLine();
                        phone = inFile.nextLine();
                        salary = Double.parseDouble(inFile.nextLine());
                        Employee emp1 = new Employee(fname, surname, address, phone, salary);
                        e1.add(emp1);
                    } else if (emptype.equalsIgnoreCase("PT")) {
                        fname = inFile.nextLine();
                        surname = inFile.nextLine();
                        address = inFile.nextLine();
                        phone = inFile.nextLine();
                        salary = Double.parseDouble(inFile.nextLine());
                        PersonalTrainer pt1 = new PersonalTrainer(fname, surname, address, phone, salary);
                        numOfMem = Integer.parseInt(inFile.nextLine());
                        for (int j = 0; j < numOfMem; j++) {
                            memtype = inFile.nextLine();
                            if (memtype.equalsIgnoreCase("Staff")) {
                                fname = inFile.nextLine();
                                surname = inFile.nextLine();
                                address = inFile.nextLine();
                                dob = inFile.nextLine();
                                phone = inFile.nextLine();
                                gender = inFile.nextLine();
                                position = inFile.nextLine();
                                department = inFile.nextLine();
                                Staff mem1 = new Staff(position,department,fname,surname,address,dob,phone,gender);
                                mem1.setTrainer(true);
                                mem1.setTrainerID(pt1.getStaffId());
                                m1.add(mem1);
                                pt1.addMember(mem1);
                            } else if (memtype.equalsIgnoreCase("student")) {
                                fname = inFile.nextLine();
                                surname = inFile.nextLine();
                                address = inFile.nextLine();
                                dob = inFile.nextLine();
                                phone = inFile.nextLine();
                                gender = inFile.nextLine();
                                degree = inFile.nextLine();
                                team = inFile.nextLine();
                                Student mem2 = new Student(degree,team,fname,surname,address,dob,phone,gender);
                                mem2.setTrainer(true);
                                mem2.setTrainerID(pt1.getStaffId());
                                m1.add(mem2);
                                pt1.addMember(mem2);

                            }
                        }
                        e1.add(pt1);
                    }
                }

            } catch (FileNotFoundException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
                a1.setEmployees(e1);
        a1.setMemberList(m1);
        new mainmenu2().setAdmin(a1);
        }
        
        else{
        FileInputStream fileIn = null;
            try {
                
                fileIn = new FileInputStream("serialize.dat");
                ObjectInputStream in =  new ObjectInputStream(fileIn);
                ArrayList<Employee> employeeList = (ArrayList<Employee>) in.readObject();
                ArrayList<Member> memberList = (ArrayList<Member>) in.readObject();
                for(int i=1;i<=employeeList.size();i++){
                    employeeList.get(i-1).setStaffId(i);
                }
                for(int i=1;i<=memberList.size();i++){
                    memberList.get(i-1).setMembershipid(i);
                }
                employeeList.get(1).setCounter(employeeList.size());
                memberList.get(1).setCounter(memberList.size());
               a1.setEmployees(employeeList);
               a1.setMemberList(memberList);
                new mainmenu2().setAdmin(a1);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    fileIn.close();
                } catch (IOException ex) {
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        }
             new mainmenu2().setVisible(true);
        this.setVisible(false);

    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);

            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables
}
